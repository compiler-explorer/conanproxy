extends _layout.pug

block prepend content
    div(class='lib')
        div(class='libname') Library:&nbsp;
            | #{lib.name} #{lib.version}
        div(class='commit') Commit:&nbsp;
            a(href=lib.commit_url) #{lib.commit_hash}

    div(class='summary')
        div(class='totals') Success rate: #{summary.succeeded} / #{summary.total}
        div(class='min_gcc') Min. supported GCC version: #{summary.min_gcc_ver}
        div(class='min_clang') Min. supported Clang version: #{summary.min_clang_ver}

    //- if view.show_all_compilers
    //-     a(href='?allcompilers=0') Show compressed view
    //- else
    //-     a(href='?allcompilers=1') Show all possible compilers

    div(class='caveats')
        em * note that logging for failed builds is only available for the most recent commits and package downloads are always for the latest build

    table(width="100%" class="table table-striped")
        theader
            tr(class="binmatrixheader")
                //- th id
                th compiler
                th arch
                th libcxx
                th success
        tbody
            each compiler in compilers
                tr
                    //- td(title=compiler.compiler_name) #{compiler.compiler_version}
                    td
                        if compiler.arch == ''
                            span #{compiler.compiler_name}
                        if compiler.arch != ''
                            span #{compiler.compiler} #{compiler.compiler_semver}
                    td #{compiler.arch}
                    td #{compiler.libcxx}
                    td(class="success")
                        span(style='display: inline-block; width: 25px')
                            if compiler.success == 'ok'
                                i(class='fa-solid fa-check')
                            if compiler.success == 'failed'
                                i(class='fa-solid fa-x')
                        if compiler.logging_url
                            span(style='display: inline-block; width: 25px')
                                a(href=compiler.logging_url target='_blank')
                                    i(class='fa-solid fa-file-text')
                        if compiler.package_url 
                            span(style='display: inline-block; width: 25px')
                                a(href=compiler.package_url target='_blank')
                                    i(class='fa-solid fa-paperclip')

    div
        h3 more commits

        ul(class="more-commits")

    script
        | if (window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches) {
        |     document.querySelectorAll('.table-striped').forEach(table => {
        |         table.classList.add('table-dark');
        |     });
        | }
    script
        | if ("#{lib.name}" === "fmt") {
        |   window.repo_owner = "fmtlib";
        |   window.repo_name = "fmt"
        | } else if ("#{lib.name}" === "beman_iterator_interface") {
        |   window.repo_owner = "bemanproject";
        |   window.repo_name = "iterator_interface"
        | } else {
        |   console.log("Library not yet supported");
        | }
        | window.lib_name = "#{lib.name}";
        | window.lib_version = "#{lib.version}";
    script(src="https://code.jquery.com/jquery-3.5.1.slim.min.js" integrity="sha384-DfXdz2htPH0lsSSs5nCTpuj/zy4C+OGpamoFVy38MVBnE+IbbVYUew+OrCXaRkfj" crossorigin="anonymous")

    script(type="module" src="/gh-commits.js")
